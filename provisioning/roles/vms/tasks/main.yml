- name: Get defined VMs Interfaces
  shell: ip addr show
  register: interface_list
  changed_when: false

- name: Create VM bridge
  shell: ip link del vbr{{ item["index"] }} ; ip link add vbr{{ item["index"] }} type bridge ; ip addr add dev vbr{{ item["index"] }} {{ item["gateway"] }}/64 ; ip link set dev vbr{{ item["index"] }} up
  loop: "{{ vms }}"
  when: (("vbr"+item["index"]|string) not in interface_list.stdout) and ((item["pop"] + item["host"]|string) == inventory_hostname)

- name: Start service libvirtd
  service:
    name: libvirtd
    state: started

- name: Get defined VMs
  shell: virsh list --all
  register: virsh_list
  changed_when: false

- name: Create cloud config
  template:
    src: cloud-config.yml
    dest: /tmp/{{ item["_id"] }}-cloud-config.yml
  loop: "{{ vms }}"
  when: (item["_id"] not in virsh_list.stdout) and ((item["pop"] + item["host"]|string) == inventory_hostname)

- name: Create network config
  template:
    src: netplan.yml
    dest: /tmp/{{ item["_id"] }}-network-config.yml
  loop: "{{ vms }}"
  when: (item["_id"] not in virsh_list.stdout) and ((item["pop"] + item["host"]|string) == inventory_hostname)

- name: Create cloud-init image
  shell:
    cmd: cloud-localds -v --network-config=/tmp/{{ item["_id"] }}-network-config.yml /opt/aarch64/vms/{{ item["_id"] }}-cloudinit.iso /tmp/{{ item["_id"] }}-cloud-config.yml
    creates: /opt/aarch64/vms/{{ item["_id"] }}-cloudinit.iso
  loop: "{{ vms }}"
  when: (item["_id"] not in virsh_list.stdout) and ((item["pop"] + item["host"]|string) == inventory_hostname)

- name: Create VM disk
  shell:
    cmd: qemu-img create -f qcow2 -F qcow2 -o backing_file=/opt/aarch64/images/{{ item["os"] }}.qcow2 /opt/aarch64/vms/{{ item["_id"] }}-disk.qcow2
    creates: /opt/aarch64/vms/{{ item["_id"] }}-disk.qcow2
  loop: "{{ vms }}"
  when: (item["_id"] not in virsh_list.stdout) and ((item["pop"] + item["host"]|string) == inventory_hostname)
  register: vm_disk_create

- name: Resize disk
  shell: qemu-img resize /opt/aarch64/vms/{{ item["_id"] }}-disk.qcow2 +{{ (item["ssd"])-2 }}G
  loop: "{{ vms }}"
  when: (item["_id"] not in virsh_list.stdout) and ((item["pop"] + item["host"]|string) == inventory_hostname) and (vm_disk_create.changed)

#- name: Cleanup config images
#  file:
#    path: "{{ item }}"
#    state: absent
#    with_fileglob:
#      - /tmp/*-cloud-config.yml
#      - /tmp/*-network-config.yml

- name: Run virt-install
  shell: |
    virt-install \
      --boot uefi \
      --arch aarch64 \
      --name "{{ item["_id"] }}" \
      --description "{{ item["password"] }}" \
      --memory {{ item["memory"] * 1024 }} \
      --vcpus {{ item["vcpus"] }} \
      --network bridge=vbr{{ item["index"] }},model=virtio \
      --import \
      --disk path=/opt/aarch64/vms/{{ item["_id"] }}-disk.qcow2,bus=virtio \
      --disk path=/opt/aarch64/vms/{{ item["_id"]}}-cloudinit.iso,device=cdrom \
      --nographics \
      --noautoconsole \
      --autostart
  loop: "{{ vms }}"
  when: (item["_id"] not in virsh_list.stdout) and ((item["pop"] + item["host"]|string) == inventory_hostname)
